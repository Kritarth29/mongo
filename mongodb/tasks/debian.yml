---
# tasks file for mongodb

- name: Add an apt key by id from a keyserver
  apt_key:
    keyserver: "{{ key_server }}"
    id: "{{ key_id }}"
    state: present

- name: Create a list file for MongoDB (trusty)
  shell: echo "deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/{{ version }} multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-{{ version }}.list
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '14.04'

- name: Create a list file for MongoDB (xenial)
  shell: echo "deb http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/{{ version }} multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-{{ version }}.list
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '16.04'

- name: Create a list file for MongoDB (bionic)
  shell: echo "deb http://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/{{ version }} multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-{{ version }}.list
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '18.04'


- name: Install mongo
  apt:
    name: mongodb-org
    state: present
    allow_unauthenticated: yes
    update_cache: yes

- name: start mongo
  service:
    name: mongod
    state: started
    enabled: yes

- name: Enable replication in mongodb
  template:
    src: mongodb_replica.j2
    dest: /etc/mongod.conf

- name: Restart mongo
  service:
    name: mongod
    state: restarted

- name: Create a file to Initialize replication
  template: src=repset_init.j2 dest=/tmp/repset_init.js
  when: inventory_hostname in groups['mongo_master']

- name: Initialize the replication set
  shell: /usr/bin/mongo < /tmp/repset_init.js
  when: inventory_hostname in groups['mongo_master']


- name: Create a file to set slave
  template: src=set_slave.j2 dest=/tmp/set_slave.js
  when: inventory_hostname in groups['mongo_slave']

- name: Check Slave ok
  shell: /usr/bin/mongo < /tmp/set_slave.js
  when: inventory_hostname in groups['mongo_slave']
